#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#include "blur_cchr.h"

double static matrix[5][5]={
  {1.0/273,4.0/273,7.0/273,4.0/273,1.0/273},
  {4.0/273,16.0/273,26.0/273,16.0/273,4.0/273},
  {7.0/273,26.0/273,41.0/273,26.0/273,7.0/273},
  {4.0/273,16.0/273,26.0/273,16.0/273,4.0/273},
  {1.0/273,4.0/273,7.0/273,4.0/273,1.0/273}
};

#define calc(c00,c01,c02,c03,c04,c10,c11,c12,c13,c14,c20,c21,c22,c23,c24,c30,c31,c32,c33,c34,c40,c41,c42,c43,c44) ( \
  matrix[0][0]*c00 + matrix[0][1]*c01 + matrix[0][2]*c02 + matrix[0][3]*c03 + matrix[0][4]*c04 + \
  matrix[1][0]*c10 + matrix[1][1]*c11 + matrix[1][2]*c12 + matrix[1][3]*c13 + matrix[1][4]*c04 + \
  matrix[2][0]*c20 + matrix[2][1]*c21 + matrix[2][2]*c22 + matrix[2][3]*c23 + matrix[2][4]*c04 + \
  matrix[3][0]*c30 + matrix[3][1]*c31 + matrix[3][2]*c32 + matrix[3][3]*c33 + matrix[3][4]*c04 + \
  matrix[4][0]*c40 + matrix[4][1]*c41 + matrix[4][2]*c42 + matrix[4][3]*c43 + matrix[4][4]*c04 )

cchr {
    constraint purge(), clear(int), endat(int), dim(int,int),  c(int,int,int,double);

    extern calc;

    step @ endat(Te), dim(Xs,Ys), 
      c(T,X,Y,C00)        , c(T,(X+1)%Xs, Y      ,C01)#passive, c(T,(X+2)%Xs, Y      ,C02)#passive, c(T,(X+3)%Xs, Y      ,C03)#passive, c(T,(X+4)%Xs, Y,      C04)#passive,
      c(T,X,Y,C10)#passive, c(T,(X+1)%Xs,(Y+1)%Ys,C11)#passive, c(T,(X+2)%Xs,(Y+1)%Ys,C12)#passive, c(T,(X+3)%Xs,(Y+1)%Ys,C13)#passive, c(T,(X+4)%Xs,(Y+1)%Ys,C14)#passive,
      c(T,X,Y,C20)#passive, c(T,(X+1)%Xs,(Y+2)%Ys,C21)#passive, c(T,(X+2)%Xs,(Y+2)%Ys,C22)#passive, c(T,(X+3)%Xs,(Y+2)%Ys,C23)#passive, c(T,(X+4)%Xs,(Y+2)%Ys,C24)#passive,
      c(T,X,Y,C30)#passive, c(T,(X+1)%Xs,(Y+3)%Ys,C31)#passive, c(T,(X+2)%Xs,(Y+3)%Ys,C32)#passive, c(T,(X+3)%Xs,(Y+3)%Ys,C33)#passive, c(T,(X+4)%Xs,(Y+3)%Ys,C34)#passive,
      c(T,X,Y,C40)#passive, c(T,(X+1)%Xs,(Y+4)%Ys,C41)#passive, c(T,(X+2)%Xs,(Y+4)%Ys,C42)#passive, c(T,(X+3)%Xs,(Y+4)%Ys,C43)#passive, c(T,(X+4)%Xs,(Y+4)%Ys,C44)#passive
    ==> T<Te | 
    c(T+1,(X+2)%Xs,(Y+2)%Ys,
      calc(C00,C01,C02,C03,C04,C10,C11,C12,C13,C14,C20,C21,C22,C23,C24,C30,C31,C32,C33,C34,C40,C41,C42,C43,C44)
    );

    clean @ clear(T) \ c(T,_,_,_) <=> true;
    cleanend @ clear(_) <=> true;
    
    purge @ purge() \ c(_,_,_,_) <=> true;
    purgeend @ purge() <=> true;
}

int main(void) {
  return 0;
}
